name: Build Release (Windows)
on:
  push:
    branches: ['**']
  workflow_dispatch:

jobs:
  build-windows-x86-64:
    runs-on: windows-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Get Version Number
        id: version_number
        shell: bash
        run: .github/actions/get-version.sh windows x86-64

      - name: Check and Install GMP if necessary
        shell: powershell
        run: |
          if (-not ((vcpkg list) -match "gmp:x64-windows-static")) { vcpkg install gmp:x64-windows-static }

      - name: Cache CUDA
        id: cache-cuda
        uses: actions/cache@v2
        with:
          path: |
            C:\cuda\v12.0
          key: ${{ runner.os }}-cuda-12.0

      - name: Install Prerequisites
        if: steps.cache-cuda.outputs.cache-hit != 'true'
        run: |
          if (-not (Get-Command "nvcc" -ErrorAction SilentlyContinue)) { choco install cuda -y --no-progress --installargs "/InstallPath:C:\cuda" }

      - name: Set Up Environment Variables
        run: |
          echo "CUDA_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.0" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "CUDA_PATH_V12_0=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.0" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "VCPKG_INSTALLED_DIR=C:/vcpkg/installed" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "LIBRARY_PATH=C:/vcpkg/installed/x64-windows-static/lib" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "INCLUDE_PATH=C:/vcpkg/installed/x64-windows-static/include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Build CUDA
        shell: bash
        run: .github/actions/build-asset-unix.sh --cuda --artifact ${{ steps.version_number.outputs.BB_ARTIFACT_NAME_CUDA }} --version ${{steps.version_number.outputs.BB_VERSION}}

      - name: Upload Artifact CUDA Windows x86-64
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.version_number.outputs.BB_ARTIFACT_NAME_CUDA }}
          path: ${{ github.workspace }}/bin/${{ steps.version_number.outputs.BB_ARTIFACT_NAME_CUDA }}
          if-no-files-found: error
