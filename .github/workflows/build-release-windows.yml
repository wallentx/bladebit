name: Build Release (Windows)
on:
  push:
    branches: ['**']
  workflow_dispatch:

jobs:
  build-windows-x86-64:
    runs-on: starman
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Get Version Number
        id: version_number
        run: |
          echo "BB_VERSION=3.0.0-alpha3" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "BB_ARTIFACT_NAME=bladebit-v3.0.0-alpha3-windows-x86-64.zip" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "BB_ARTIFACT_NAME_CUDA=bladebit-cuda-v3.0.0-alpha3-windows-x86-64.zip" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Set Up Environment Variables
        run: |
          echo "CUDA_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "CUDA_PATH_V12_1=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "VCPKG_INSTALLED_DIR=C:/vcpkg/installed" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "LIBRARY_PATH=C:/vcpkg/installed/x64-windows-static/lib" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "INCLUDE_PATH=C:/vcpkg/installed/x64-windows-static/include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Build CUDA
        run: |
         mkdir build
         cd build
         cmake .. -DCMAKE_LIBRARY_PATH="${LIBRARY_PATH}" -DCMAKE_INCLUDE_PATH="${INCLUDE_PATH}"
         cmake --build . --target bladebit_cuda --config Release -j 44
      - name: Upload Artifact CUDA Windows x86-64
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.version_number.outputs.BB_ARTIFACT_NAME_CUDA }}
          path: ${{ github.workspace }}/bin/${{ steps.version_number.outputs.BB_ARTIFACT_NAME_CUDA }}
          if-no-files-found: error
